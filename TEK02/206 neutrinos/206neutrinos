#!/usr/bin/env python3

import sys, os, math
from sys import stdin
from math import factorial, sqrt, exp, pi

def usage():
    print("USAGE")
    print("\t./206neutrinos n a h sd\n")
    print("DESCRIPTION")
    print("\tn number of values")
    print("\ta arithmetic mean")
    print("\th harmonic mean")
    print("\tsd standard deviation")

def error_handling():
    tab = []
    for i in range (1, 5):
        if (int(sys.argv[i]) < 0) :
            print("oof5")
            raise Exception
        tab.append(int(sys.argv[i]))
    return tab

def check(input):
    if input == "END":
        exit(0)
    try:
        value = float(input)
        if value < 0:
            print("oof3")
            raise Exception
    except:
        print("oof4")
        raise Exception
    return value

def result(tab, value):
    total = tab[1] * tab[0]
    tmp = (tab[3] * tab[3] + tab[1] * tab[1]) * tab[0]
    tab[0] = tab[0] + 1
    tab[1] = (total + value) / tab[0]
    tab[3] = sqrt(((tmp + pow(value, 2)) / tab[0]) - pow(tab[1], 2))
    tab[2] = tab[0] / ((1 / value) + ((tab[0] - 1) / tab[2]))
    m_square = sqrt((tmp + pow(value, 2)) / tab[0])
    print("\tNumber of values:\t%d" % tab[0])
    print("\tStandard deviation:\t%.2f" % tab[3])
    print("\tArithmetic mean:\t%.2f" % tab[1])
    print("\tRoot mean square:\t%.2f" % m_square)
    print("\tHarmonic mean:\t\t%.2f\n" % tab[2])

def neutrinos(tab):
    while (True):
        input_value = input("Enter next value: ")
        value = check(input_value)
        temp = (tab[3] * tab[3] + tab[1] * tab[1]) * tab[0]
        result(tab, value)

try :
    if (len(sys.argv) == 2 and sys.argv[1] == '-h') :
        usage()
    elif (len(sys.argv) == 5) :
        tab = error_handling()
        neutrinos(tab)
    else :
        print("oof2")
        raise Exception
except Exception as exc:
    print("oof1")
    exit(84)